; vim: set fileencoding=utf-8 :
; Andre Anjos <andre.anjos@idiap.ch>
; Mon 16 Apr 08:29:18 2012 CEST

; Example buildout recipe using a local (off-root) Bob installation

[buildout]
parts = bob python
develop = .

; The 'mr.developer' extension is available publicly at PyPI (the python
; package index). You don't need to worry about it as buildout will download
; install it for you.
extensions = mr.developer
auto-checkout = *

; Note: You will notice 'bob' is listed as an egg here. If you have a version
; of Bob installed by the administrator, centrally, but want to use your
; locally compiled version, that is required to assure the include path order
; in generated scripts.
eggs = bob.project.example
       bob
;      ipython ; IPython interpreter, if you don't have that installed already

[sources]
; You will need this package so that buildout includes the path to Bob's build
; or installation directory using this configuration file as reference.
local.bob.recipe = git https://github.com/idiap/local.bob.recipe.git

; You may insert other checkouts here, for packages you have developed
; somewhere else and that you would like to include in your working environment
; Here are some examples:
;gridtk = git https://github.com/idiap/gridtk.git

[bob]
recipe = local.bob.recipe:config

; Choose here your bob installation - **re-run buildout if you change it**
; the path here can be relative or absolute to either the build directory of
; Bob or to an installation directory. Both should work w/o problems.
;
; If you go for a relative path, remember this path is relative to the path
; you are calling buildout from. This is normally the path that contains the
; file 'setup.py' for your own package.
install-directory = ../bob/build

; Some examples for Idiap:
;install-directory = /idiap/group/torch5spro/releases/bob-1.0.2/install/linux-x86_64-release
;install-directory = /idiap/group/torch5spro/nightlies/last/install/linux-x86_64-release

[python]
recipe = zc.recipe.egg
interpreter = python
eggs = ${buildout:eggs}

; Enable this section to give you an ipython prompt inside your binary
; directory. Also go up to the section 'buildout' and add 'ipython' as one of
; the 'parts' entry so this section is actually executed
;[ipython]
;recipe = zc.recipe.egg
;eggs = ipython
;       ${buildout:eggs}
